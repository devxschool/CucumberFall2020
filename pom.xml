<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.devxschool</groupId>
    <artifactId>cucumberFall2020</artifactId>
    <version>5.8</version>

    <!-- by default maven uses sdk 1.3 -->
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <!-- this is where we define all of our dependencies aka libraries -->
    <dependencies>

        <!-- if your depedencies are showing red it means you dont have that library
        in your local .m2 repository -->
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>1.2.5</version>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-core</artifactId>
            <version>1.2.5</version>
        </dependency>

        <!-- cucumber Junit framework -->
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.2.5</version>
        </dependency>

    </dependencies>

    <!-- project building configurations and plugins -->
    <!-- you can customize the build process -->
    <build>
        <!-- plugins are libraries similar to dependencies -->
        <!-- difference is dependencies are used by programmers to code by using existing functionalities coming from outside
        libraries -->
        <!-- plugins though dont require extra coding these are features that get executed and performed automatically as part
        of project building -->
        <plugins>
            <!-- sure-fire plugin is used to specify which tests
            should be run as part of test(goal) -->
            <!-- by defaul maven uses surefire plugin to execute tests.
            Test classes that have names end with Test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
                <configuration>
                    <!-- which tests do you want to include in the surefire plugin run in test phase-->
                    <includes>
                        <!-- list all Junit/Or TestNG runner classes -->
                        <include>**/TestRunner.java</include>
                    </includes>
                    <!-- doesnt make the build fail bc of test failures -->
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>

            <plugin>
                <!-- pie chart nice cucumber report -->
                <groupId>net.masterthought</groupId>
                <artifactId>maven-cucumber-reporting</artifactId>
                <version>2.8.0</version>
                <!-- how this plugin should be executed -->
                <executions>
                    <execution>
                        <id>AnyID</id>
                        <!-- which maven phase this plugin should be executed -->
                        <phase>verify</phase>
                        <!-- this plugin specific goals -->
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <!-- here give configuration for the report like name, where
                              the plugin should find cucumber.json and where the final nice report
                              should be created(generated)? -->
                        <configuration>
                            <!-- what ever we put here will appear in the report title -->
                            <projectName>Amazon Alexa ${project.version}</projectName>
                            <!-- where the nice report should be generated in? -->
                            <!-- from pom file project build directory is target folder -->
                            <outputDirectory>${project.build.directory}/fall2020CucumberReport</outputDirectory>
                            <!-- which cucumber junit statistics from runner class should I use? -->
                            <cucumberOutput>${project.build.directory}/cucumber.json</cucumberOutput>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- plugins and their configurations can be different and we can choose a specific maven build configuration
    based on the maven profile -->
    <!-- we need to run maven profiles because we want to diffirenciate between smoketestRunner class and RegressionRunner
    in the surefire plugin -->
    <!-- so each profile has different surefire plugin test include configurations -->
    <profiles>
        <profile>
            <id>smoke</id>
<!--            <activation>-->
<!--                <activeByDefault>true</activeByDefault>-->
<!--            </activation>-->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.21.0</version>
                        <configuration>
                            <includes>
                                <include>**/SmokeRunner.java</include>
                            </includes>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>regression</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.21.0</version>
                        <configuration>
                            <includes>
                                <include>**/RegressionRunner.java</include>
                            </includes>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>